/*OUTPUT  Enter number of elements:2   enter elements to it10   enter elements to it50   10 is stored in 0x556d99052ac0   50 is stored in 0x556d99052ac4   0 is stored in 0x556d99052ac0   0 is stored in 0x556d99052ac4 */    #include <stdio.h>#include <stdlib.h>int main () {    int *p, n, n1, i;  printf ("Enter number of elements: ");  scanf ("%d", &n);  p = (int *) malloc (n * sizeof (int));  if (p == NULL)    {      printf ("Error! memory not allocated.");    }  else    {      for (i = 0; i < n; i++)	{	  printf ("enter elements to it :");	  scanf ("%d", p + i);	// returns base address	} for (i = 0; i < n; i++)	{	  printf ("%d is stored in %p\n", *(p + i), p + i);	} free (p); if (p == NULL)		// p will not become null when it is deallocated ...the memory address will remain but data in it will be garbage.	{	  printf ("Error! memory not allocated.");	} for (i = 0; i < n; i++)	{	  printf ("%d is stored in %p\n", *(p + i), p + i);	//  address will reain there after freeing memory.	}  }}     